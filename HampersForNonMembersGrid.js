/*
 * File: app/view/HampersForNonMembersGrid.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.HampersForNonMembersGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.hampersfornonmembersgrid',

    requires: [
        'Ext.grid.RowNumberer',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator'
    ],

    height: 244,
    itemId: 'hampersfornonmembersgrid',
    width: 400,
    store: 'HampersForNonMembers',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 40,
                    dataIndex: 'string',
                    text: 'S/n'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'beneficiary',
                    text: 'Beneficiary'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'hamper_label',
                    text: 'Hamper Label'
                },
                {
                    xtype: 'gridcolumn',
                    width: 200,
                    dataIndex: 'status',
                    text: 'Delivery Status'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'number_of_hampers_delivered',
                    text: 'Number of Hampers & Gift for delivery'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'addnonmemberBtn',
                            iconCls: 'add',
                            text: 'Add'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'editnonmemberBtn',
                            iconCls: 'edit',
                            text: 'Edit'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'deletenonmemberBtn',
                            iconCls: 'delete_1',
                            text: 'Remove'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'nonmemberdeliveryreportBtn',
                            iconCls: 'refresh',
                            text: 'Delivery Report'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});