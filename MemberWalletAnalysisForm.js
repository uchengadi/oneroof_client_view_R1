/*
 * File: app/view/MemberWalletAnalysisForm.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.MemberWalletAnalysisForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.memberwalletanalysisform',

    requires: [
        'Ext.form.FieldSet',
        'Ext.form.field.Text',
        'Ext.grid.Panel',
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 486,
    width: 1000,
    bodyPadding: 10,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    margin: 5,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'container',
                            flex: 1
                        },
                        {
                            xtype: 'container',
                            flex: 1,
                            margin: 10,
                            layout: 'fit',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    title: 'Amount available for all products & categories',
                                    layout: {
                                        type: 'vbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'container',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'container',
                                            flex: 1,
                                            layout: 'anchor',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    anchor: '100%',
                                                    fieldLabel: 'Usable Available Funds(=N=)',
                                                    labelWidth: 200,
                                                    name: 'available_usable_fund',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'container',
                                            flex: 1,
                                            layout: 'anchor',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    anchor: '100%',
                                                    fieldLabel: 'Not Due Available Funds (=N=)',
                                                    labelWidth: 200,
                                                    name: 'available_funds_for_future',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'container',
                                            flex: 1
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            flex: 1
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    margin: 5,
                    layout: 'fit',
                    items: [
                        {
                            xtype: 'fieldset',
                            layout: 'fit',
                            title: 'Amount that is limited by products',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'productlimiterGrid',
                                    title: 'Amount limited by products',
                                    store: 'ProductsExpendabilityOnWallets',
                                    columns: [
                                        {
                                            xtype: 'rownumberer',
                                            width: 40,
                                            dataIndex: 'string',
                                            text: 'S/n'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var productStore = Ext.getStore('AllProducts');
                                                var product = productStore.findRecord('id', value);
                                                return product!== null ? product.get('name'): value;
                                            },
                                            width: 250,
                                            dataIndex: 'product_id',
                                            text: 'Product Name'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 250,
                                            dataIndex: 'expendable_value',
                                            text: 'Expendable Value (=N=)'
                                        }
                                    ],
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'top',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    hidden: true,
                                                    itemId: 'viewproductBtn',
                                                    text: 'View Product'
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    margin: 5,
                    layout: 'fit',
                    items: [
                        {
                            xtype: 'fieldset',
                            layout: 'fit',
                            title: 'Amounts limited by service categories',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'categorylimiterGrid',
                                    title: 'Amount limited by service categories',
                                    store: 'CategoriesExpendabilityOnWallets',
                                    columns: [
                                        {
                                            xtype: 'rownumberer',
                                            width: 40,
                                            dataIndex: 'string',
                                            text: 'S/n'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var categoryStore = Ext.getStore('Categories');
                                                var category = categoryStore.findRecord('id', value);
                                                return category!== null ? category.get('name'): value;
                                            },
                                            width: 250,
                                            dataIndex: 'category_id',
                                            text: 'Category'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 200,
                                            dataIndex: 'expendable_value',
                                            text: 'Expendable Value (=N=)'
                                        }
                                    ],
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'top',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    hidden: true,
                                                    itemId: 'viewproductinthiscategoryBtn',
                                                    text: 'View products in this category'
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});