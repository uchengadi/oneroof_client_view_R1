/*
 * File: app/view/OccurrenceProductNotExceedingSixMonthsGrid.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.OccurrenceProductNotExceedingSixMonthsGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.occurrenceproductnotexceedingsixmonthsgrid',

    requires: [
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.grid.View'
    ],

    height: 250,
    width: 400,
    store: 'OccurrenceOfHistoryProductNotExceedingSixMonths',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 50,
                    dataIndex: 'string',
                    text: 'S/n'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'date_ordered',
                    text: 'Date Ordered'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var orderStore = Ext.getStore('Orders');
                        var order = orderStore.findRecord('id', value);
                        return order!== null ? order.get('order_number'): value;
                    },
                    width: 200,
                    dataIndex: 'order_id',
                    text: 'Order Id'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var productStore = Ext.getStore('Products');
                        var product = productStore.findRecord('id', value);
                        return product!== null ? product.get('name'): value;
                    },
                    width: 300,
                    dataIndex: 'product_id',
                    text: 'Product'
                },
                {
                    xtype: 'gridcolumn',
                    width: 300,
                    dataIndex: 'store_id',
                    text: 'Store'
                },
                {
                    xtype: 'gridcolumn',
                    width: 200,
                    dataIndex: 'number_of_portion',
                    text: 'Number of Portion'
                },
                {
                    xtype: 'numbercolumn',
                    width: 300,
                    dataIndex: 'prevailing_retail_selling_price_per_item_at_purchase',
                    text: 'Prevailing Retail Selling Price'
                },
                {
                    xtype: 'numbercolumn',
                    width: 300,
                    dataIndex: 'cobuy_member_price_per_item_at_purchase',
                    text: 'Member Selling Price'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'start_price_validity_period',
                    text: 'Start Price Validity Period'
                },
                {
                    xtype: 'datecolumn',
                    width: 300,
                    dataIndex: 'end_price_validity_period',
                    text: 'End Price Validity Period'
                },
                {
                    xtype: 'numbercolumn',
                    width: 300,
                    dataIndex: 'amount_saved_per_item_on_this_order',
                    text: 'Amount Saved'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var userStore = Ext.getStore('AllMembers');
                        var user = userStore.findRecord('id', value);
                        if(user.get('middlename') === null || user.get('middlename') === undefined){
                            var name = user.get('firstname') + " " + user.get('lastname');
                        }else{
                            var name = user.get('firstname') + " " + user.get('middlename') + " " + user.get('lastname');
                        }

                        return user!== null ? name: value;

                    },
                    width: 300,
                    dataIndex: 'ordered_by',
                    text: 'Ordered By'
                }
            ]
        });

        me.callParent(arguments);
    }

});