/*
 * File: app/view/VoucherLimitedToProductsGrid.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.VoucherLimitedToProductsGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.voucherlimitedtoproductsgrid',

    requires: [
        'Ext.grid.RowNumberer',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator'
    ],

    height: 250,
    itemId: 'vouherproductlimiterGrid',
    width: 400,
    title: 'Voucher Limited to these Products',
    store: 'ProductsLimitedToVoucher',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 40,
                    dataIndex: 'string',
                    text: 'S/n'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var productStore = Ext.getStore('AllProducts');
                        var product = productStore.findRecord('id', value);
                        return product!== null ? product.get('name'): value;
                    },
                    width: 250,
                    dataIndex: 'product_id',
                    text: 'Product Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'status',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    width: 180,
                    dataIndex: 'expendable_limits_in_percentage',
                    text: 'Expendable Limit in %'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'changestatusBtn',
                            text: 'Change Status'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'deleteBtn',
                            icon: '',
                            iconCls: 'delete_1',
                            text: 'Remove Product'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});