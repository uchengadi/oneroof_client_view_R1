/*
 * File: app/view/VoucherBeneficiariesGrid.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.VoucherBeneficiariesGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.voucherbeneficiariesgrid',

    requires: [
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.View'
    ],

    height: 250,
    id: 'voucherbeneficiariesgrid',
    width: 400,
    store: 'VoucherBeneficiaries',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer',
                    width: 40,
                    dataIndex: 'string',
                    text: 'S/n'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var userStore = Ext.getStore('AllMembers');
                        var walletStore = Ext.getStore('Wallet');
                        var wallet = walletStore.findRecord('id', value);
                        //wallet!== null ? wallet.get('member_owner_id'): value;

                        var user = userStore.findRecord('id', wallet!== null ? wallet.get('member_owner_id'): value);
                        if(user.get('middlename') === null || user.get('middlename') === undefined){
                            var name = user.get('firstname') + " " + user.get('lastname');
                        }else{
                            var name = user.get('firstname') + " " + user.get('middlename') + " " + user.get('lastname');
                        }

                        return user!== null ? name: value;
                    },
                    width: 350,
                    dataIndex: 'wallet_id',
                    text: 'Wallet Owner'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'status',
                    text: 'Status'
                },
                {
                    xtype: 'numbercolumn',
                    width: 200,
                    dataIndex: 'actual_voucher_share',
                    text: 'Fund Value'
                },
                {
                    xtype: 'numbercolumn',
                    width: 200,
                    dataIndex: 'voucher_share_in_percentage',
                    text: 'Voucher Share (%)'
                },
                {
                    xtype: 'datecolumn',
                    width: 200,
                    dataIndex: 'usage_commencement_date',
                    text: 'Usage commencement Date',
                    format: 'd/m/Y'
                }
            ]
        });

        me.callParent(arguments);
    }

});