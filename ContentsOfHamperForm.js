/*
 * File: app/view/ContentsOfHamperForm.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.view.ContentsOfHamperForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.contentsofhamperform',

    requires: [
        'Ext.form.FieldSet',
        'Ext.view.View',
        'Ext.XTemplate',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.field.Hidden'
    ],

    height: 400,
    width: 600,
    layout: 'fit',
    bodyPadding: 10,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'fieldset',
                    layout: 'fit',
                    title: 'Products in the Hamper & Gift Container',
                    items: [
                        {
                            xtype: 'dataview',
                            prepareData: function(data) {
                                var price = data.prevailing_retail_selling_price;

                                console.log('tis data is:',data);

                                Ext.apply(data, {
                                    shortDesc: Ext.util.Format.ellipsis("____________________", 20),
                                    shortName: Ext.util.Format.ellipsis(data.name, 20),
                                    price: Ext.util.Format.currency(price,'=N=',2)
                                    //min_subs_no: Ext.util.Format.number(data.min_subscription_required, '0,000,000'),
                                    //visibility: Ext.util.Format.ellipsis(data.visibility, 15),
                                    //location: Ext.util.Format.ellipsis(data.storage_location, 15)
                                });


                                return data;

                            },
                            itemId: 'hamperDataview',
                            overflowY: 'auto',
                            itemSelector: 'div.thumb-wrap',
                            itemTpl: [
                                '<tpl for=".">',
                                '    <div style="float:left;padding:	30px 30px 30px 30px;  "class=thumb-wrap id="id">',
                                '        <div class=thumb><img src="../admin.oneroof.com.ng/cobuy_images/icons/{icon}"  height="80" width="50"></div>',
                                '        <div>',
                                '        <h5> <b>{shortName} </b></br></h5>',
                                '        <h5> <b>{shortDesc} </b></br></h5>',
                                '        <!--<h5><em>{price} </em></br></h5> -->',
                                '            ',
                                '        <!--<spam>{description} </spam> -->',
                                '        <!--  <span style=class=x-editable>{shortDesc}</span>-->',
                                '        <!--<span style="padding-right:5px">price/user/yr:</span><span style=class=x-editable>{price}</span>-->',
                                '        <!--<span style="padding-right:5px">visibility:</span><span style=class=x-editable>{visibility}</span>',
                                '        <!--<span style="padding-right:5px">location:</span><span style=class=x-editable>{location}</span>-->',
                                '        <!--<br>min subscription no.:<span style="padding-left:5px">{min_subs_no}</span></br>-->',
                                '        </div>',
                                '        ',
                                '    </tpl>',
                                '<div class=x-clear></div>'
                            ],
                            preserveScrollOnRefresh: true,
                            store: 'HamperHasProducts'
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: 'Label',
                    name: 'hamper_id'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'closeBtn',
                            iconCls: 'cancel',
                            text: 'Close'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});